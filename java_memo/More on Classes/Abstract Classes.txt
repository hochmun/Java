추출 Abstraction

데이터 추상화는 구현 세부 사항을 포함하지 않고 필수 기능을 나타내는 과정에서 필수 정보만 외부 세계에 제공합니다.
좋은 실제 사례는 책입니다. 책이라는 용어를 들으면 페이지 수, 색상 또는 크기와 같은 정확한 세부 사항을 알지 못하지만 책의 개념 또는 추상화를 이해합니다.
추상화의 개념은 하나의 특정 예의 특정 특성보다 본질적인 특성에 초점을 맞추는 것입니다.

Java에서 추상화는 추상 클래스와 인터페이스를 사용하여 달성됩니다.
추상 클래스는 abstract 키워드를 사용하여 정의됩니다.
- 클래스가 추상으로 선언되면 인스턴스화할 수 없습니다(해당 유형의 개체를 만들 수 없음).
- 추상 클래스를 사용하려면 다른 클래스에서 상속받아야 합니다.
- 추상 메서드를 포함하는 모든 클래스는 추상으로 정의해야 합니다.

추상 메서드는 구현 없이 선언된 메서드입니다(중괄호 없이 세미콜론이 뒤따름). abstract void walk();

예를 들어 Animal 클래스를 추상으로 정의할 수 있습니다.

abstract class Animal {
  int legs = 0;
  abstract void makeSound();
}

makeSound 메소드도 수퍼클래스에 구현이 없기 때문에 추상적입니다.
Animal 클래스에서 상속하고 하위 클래스에 대한 makeSound() 메서드를 정의할 수 있습니다.

abstract class Animal {
    int legs = 0;
    abstract void makeSound();
}

class Cat extends Animal {
    public void makeSound() {
        System.out.println("Meow");
    }
}

public class Program {
    public static void main(String[] args) {
        Cat c = new Cat();
        c.makeSound(); // Meow
    }
}

모든 동물은 소리를 내지만 각각 다른 방법으로 소리를 냅니다. 이것이 우리가 Animal 추상 클래스를 정의하고 사운드를 만드는 방법에 대한 구현을 서브클래스에 남겨두는 이유입니다.
이것은 수퍼클래스에 메소드에 대한 의미 있는 정의가 없을 때 사용됩니다.

예문:

보드 게임 회사는 매년 새로운 보드 게임을 만듭니다. 모든 게임에는 다른 규칙이 있지만 각각 이름과 play() 메서드가 있다는 점에서 모두 비슷합니다.
Monopoly, Chess 및 Battleships의 3가지 다른 게임을 만들어야 합니다. play() 메서드에서 Monopoly는 "Buy all property.", Battleships - "Sink all ship." 및 Chess - "Kill the enemy king."을 인쇄해야 합니다.
추상 Game 클래스에서 상속된 getName() 및 play() 메서드를 구현하여 코드를 완성합니다.

게임에 이름을 지정하려면 getName() 함수 안에 이름 문자열을 반환하기만 하면 됩니다.

class Main {
   public static void main(String[] args) {
       //do not touch this code
       Monopoly monopoly = new Monopoly();
       Chess chess = new Chess();
       Battleships battleships = new Battleships();
       
       monopoly.play();
       chess.play();
       battleships.play();
   }
}

abstract class Game {
   public String name;
   abstract String getName();
   abstract void play();
}

class Monopoly extends Game {

   //give "Monopoly" name to game
   String getName() {
       return name;
   }

   // play method should print "Buy all property."
   void play() {
       System.out.println("Buy all property.");
   }
}

class Chess extends Game {

   //give "Chess" name to game
   String getName() {
       return name;
   }

   // play method should print "Kill the enemy king."
   void play() {
       System.out.println("Kill the enemy king.");
   }
}

class Battleships extends Game {

   //give "Battleships" name to game
   String getName() {
       return name;
   }

   // play method should print "Sink all ships."
   void play() {
       System.out.println("Sink all ships.");
   }
}