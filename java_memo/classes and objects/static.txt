Static

변수나 메서드를 static 으로 선언 하면 특정 인스턴스가 아니라 클래스에 속합니다. 
즉 , 클래스의 여러 개체를 만들거나 만들지 않은 경우에도 정적 멤버 의 인스턴스는 하나만 존재합니다. 
모든 개체에서 공유됩니다.

예시:
public class Counter {
  public static int COUNT=0;
  Counter() {
    COUNT++;
  }
}

COUNT 변수는 해당 클래스의 모든 개체에서 공유됩니다.
이제 main 에서 Counter 클래스의 개체를 만들고 정적 변수에 액세스할 수 있습니다.

public class Counter {
    public static int COUNT=0;
    Counter() {
        COUNT++;
    }
}

public class MyClass {
    public static void main(String[ ] args) {
        Counter c1 = new Counter();
        Counter c2 = new Counter();
        System.out.println(Counter.COUNT); // 2
    }
}

COUNT 변수는 정적이고 Counter 클래스의 새 객체가 생성될 때마다 1씩 증가 하기 때문에 출력은 2 입니다. 위의 코드에서 우리는 2개의 객체를 생성했습니다.

c1.COUNT와 같은 해당 클래스의 개체를 사용하여 정적 변수에 액세스할 수도 있습니다 .

필수는 아니지만 정적 변수의 이름을 지정할 때 대문자를 사용하는 것이 일반적입니다.

정적static 메서드 에도 동일한 개념이 적용됩니다 .

public class Vehicle {
  public static void horn() {
    System.out.println("Beep");
  }
}

이제 객체를 생성하지 않고 horn 메서드를 호출할 수 있습니다.

public class Vehicle {
    public static void horn() {
        System.out.println("Beep");
    }
}

public class MyClass {
    public static void main(String[ ] args) {
        Vehicle.horn(); // Beep
    }
}

정적 메서드의 또 다른 예는 Math 클래스의 메서드이므로 Math 개체 를 만들지 않고 호출할 수 있습니다 .

또한 main 메서드는 항상 static 이어야 합니다 .